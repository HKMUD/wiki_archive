a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1592555761;s:8:"modified";i:1567154347;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:38:"百無聊賴之挑戰stone cart scheme";s:11:"description";a:2:{s:15:"tableofcontents";a:3:{i:0;a:4:{s:3:"hid";s:6:"目標";s:5:"title";s:6:"目標";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:15:"開發碎碎唸";s:5:"title";s:15:"開發碎碎唸";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:19:"附錄_scheme_alias";s:5:"title";s:26:"【附錄】scheme & alias";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:377:"百無聊賴之挑戰stone cart scheme

目標

用scheme持續跑stone cart，穩定為上，效率為次。

開發碎碎唸

stone cart採用固定路線，每次drive一格，失敗重試，成功則走下一格，非常機械化，理論上用scheme跑絕對可行，但玩過conditional scheme的人都會知道，scheme最大的問題是對指令成功與否的誤判：";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1592555761;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}